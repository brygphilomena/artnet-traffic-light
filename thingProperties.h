// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char SSID[]     = SECRET_SSID;    // Network SSID (name)
const char PASS[]     = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)

void onBlinkAmountChange();
void onDmxUniverseChange();
void onGreenChannelChange();
void onLightdelayChange();
void onRedChannelChange();
void onSequenceChange();
void onGreenOnChange();
void onRedOnChange();
void onRunautoChange();

int blinkAmount;
int dmxUniverse;
int greenChannel;
int lightDelay;
int mode;
int redChannel;
int sequence;
bool greenOn;
bool redOn;
bool runauto;

void initProperties(){

  ArduinoCloud.addProperty(blinkAmount, READWRITE, ON_CHANGE, onBlinkAmountChange);
  ArduinoCloud.addProperty(dmxUniverse, READWRITE, ON_CHANGE, onDmxUniverseChange);
  ArduinoCloud.addProperty(greenChannel, READWRITE, ON_CHANGE, onGreenChannelChange);
  ArduinoCloud.addProperty(lightDelay, READWRITE, ON_CHANGE, onLightdelayChange);
  ArduinoCloud.addProperty(mode, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(redChannel, READWRITE, ON_CHANGE, onRedChannelChange);
  ArduinoCloud.addProperty(sequence, READWRITE, ON_CHANGE, onSequenceChange);
  ArduinoCloud.addProperty(greenOn, READWRITE, ON_CHANGE, onGreenOnChange);
  ArduinoCloud.addProperty(redOn, READWRITE, ON_CHANGE, onRedOnChange);
  ArduinoCloud.addProperty(runauto, READWRITE, 5 * SECONDS, onRunautoChange);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
